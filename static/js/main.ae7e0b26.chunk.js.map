{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortType","setSortType","reversed","setReversed","sortedGoods","goods","resultGoods","sort","good1","good2","localeCompare","length","getGoods","visibleGoods","reverse","className","type","cn","onClick","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAiB,iBAuBVC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAzBS,SAACC,EAAOL,GACvB,IAAMM,EAAW,YAAOD,GAiBxB,OAfIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRL,EAOaM,CAASjB,EAAiBK,GACxCa,EAAeX,EAAWE,EAAYU,UAAYV,EAExD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBACD,CAAE,WAAYjB,IAAaJ,IAE/BsB,QAAS,kBAAMjB,EAAYL,IAN7B,iCAWA,wBACEoB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CAAE,WAAYjB,IAAaH,IAErDqB,QAAS,kBAAMjB,EAAYJ,IAL7B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaf,IAClDgB,QAAS,kBAAMf,GAAaD,IAH9B,sBAQEA,GAAYF,IACZ,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAY,IACZE,GAAY,IALhB,sBAaJ,6BACGU,EAAaM,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAI,UAAQ,OAAZ,SAA4CD,GAA5C,UAA2BA,EAAOC,aC9F5CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae7e0b26.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nconst getGoods = (goods, sortType) => {\n  const resultGoods = [...goods];\n\n  if (sortType) {\n    resultGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return resultGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [reversed, setReversed] = useState(false);\n\n  const sortedGoods = getGoods(goodsFromServer, sortType);\n  const visibleGoods = reversed ? sortedGoods.reverse() : sortedGoods;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info',\n              { 'is-light': sortType !== SORT_ALPHABETICALLY })\n          }\n          onClick={() => setSortType(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success', { 'is-light': sortType !== SORT_BY_LENGTH })\n          }\n          onClick={() => setSortType(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(reversed || sortType) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType('');\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good, index) => (\n          <li data-cy=\"Good\" key={`${good + index}`}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}